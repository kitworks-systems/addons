image: registry.crnd.pro/crnd-opensource/docker/odoo-ci-x:14.0-simple

variables:
    SERIES_BRANCH: '14.0'
    ODOO_ADMIN_PASS: admin
    CI_JOB_TOKEN_GIT_HOST: 'gitlab.crnd.pro'

    PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.hidden-pip-cache"

.only-stable-branch: &only_stable_branch
    only:
        - "14.0"

.only-dev-branch: &only_dev_branch
    only:
        - /^14.0-.*$/

.except-auto-commits: &except_auto_commits
    except:
        variables:
            - $CI_COMMIT_MESSAGE =~ /\[CI-AUTO-UPDATE\]/
            - $CI_COMMIT_MESSAGE =~ /Translated using Weblate/

# Disable global cache
cache: {}

.pip_cache: &pip_cache_definition
    cache:
        key: ${CI_JOB_NAME}
        paths:
            - "${PIP_CACHE_DIR}"

stages:
    - static-test
    - test
    - deploy

build_env:
    stage: static-test
    script:
        - pwd
        - whoami
        - python3 --version
        - odoo-helper --version
        - odoo-helper status --tools-versions --ci-tools-versions
        - echo "Checking branch compatability $CI_COMMIT_BRANCH" && [[ "$CI_COMMIT_BRANCH" =~ ^14.0(-.*)?$ ]]

flake8:
    stage: static-test
    script:
        - odoo-helper lint flake8 .
    <<: *except_auto_commits

pylint:
    stage: static-test
    script:
        - odoo-helper lint pylint --jslintrc=./.jslintrc .
    <<: *except_auto_commits

# stylelint:
#     stage: static-test
#     script:
#         - odoo-helper lint style .
#     allow_failure: true
#     <<: *only_dev_branch
#     <<: *except_auto_commits

#bandit:
#    stage: static-test
#    <<: *pip_cache_definition
#    before_script:
#        - odoo-helper pip install bandit
#    script:
#        - odoo-helper exec bandit -r .
#    <<: *except_auto_commits

check-versions:
    stage: static-test
    script:
        - odoo-helper ci check-versions-git . origin/$SERIES_BRANCH $CI_COMMIT_SHA
    <<: *only_dev_branch
    <<: *except_auto_commits

ensure-changelog:
    stage: static-test
    script:
        - odoo-helper ci ensure-changelog --format md . origin/$SERIES_BRANCH $CI_COMMIT_SHA
    allow_failure: true
    <<: *only_dev_branch
    <<: *except_auto_commits

ensure-icons:
    stage: static-test
    script:
        - odoo-helper ci ensure-icons .
    allow_failure: true
    <<: *only_dev_branch
    <<: *except_auto_commits


tests:
    image: registry.crnd.pro/crnd-opensource/docker/odoo-ci-x:14.0-ci
    stage: test
    <<: *pip_cache_definition
    before_script:
        - sudo apt-get update && sudo apt-get install -y libmagic1
        - odoo-helper link .
    script:
        - odoo-helper --use-unbuffer test --coverage --coverage-report --coverage-skip-covered --coverage-fail-under 40 --create-test-db --dir .
    <<: *except_auto_commits
    coverage: '/^TOTAL\s+\d+\s+\d+\s+(\d+\%)/'
    artifacts:
        name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
        when: on_failure
        expire_in: 1 day
        paths:
        - /tmp/odoo_tests/

test_installation_no_demo:
    image: registry.crnd.pro/crnd-opensource/docker/odoo-ci-x:14.0-ci
    stage: test
    variables:
        ODOO_DB_NAME: test-db-clean
    <<: *pip_cache_definition
    before_script:
        - sudo apt-get update && sudo apt-get install -y libmagic1
        - odoo-helper link .
        - odoo-helper --use-unbuffer db create $ODOO_DB_NAME
    script:
        - odoo-helper addons install --db "$ODOO_DB_NAME" --dir-r . --show-log-on-error
    <<: *except_auto_commits

migration_tests:
    image: registry.crnd.pro/crnd-opensource/docker/odoo-ci-x:14.0-ci
    stage: test
    variables:
        ODOO_DB_NAME: test-db
    <<: *pip_cache_definition
    before_script:
        - sudo apt-get update && sudo apt-get install -y libmagic1
        - git fetch origin $SERIES_BRANCH
        - git checkout $SERIES_BRANCH
        - git pull
        - odoo-helper link .
        - odoo-helper --use-unbuffer db create --demo $ODOO_DB_NAME
        - odoo-helper --use-unbuffer addons install --db $ODOO_DB_NAME --dir .
        - git checkout $CI_COMMIT_SHA
        - git clean -fdx
        - odoo-helper link .
        - odoo-helper --use-unbuffer addons update-list
        - odoo-helper --use-unbuffer addons update --db $ODOO_DB_NAME --dir .
    script:
        - odoo-helper --use-unbuffer test --coverage --coverage-report --coverage-skip-covered --coverage-fail-under 40 --dir .
    coverage: '/^TOTAL\s+\d+\s+\d+\s+(\d+\%)/'
    <<: *only_dev_branch
    <<: *except_auto_commits
    allow_failure: true
    artifacts:
        name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
        when: on_failure
        expire_in: 1 day
        paths:
        - /tmp/odoo_tests/

#update_addons_list_and_trans:
#    image: registry.crnd.pro/crnd-opensource/docker/odoo-ci-x:14.0-ci
#    stage: deploy
#    before_script:
#        - odoo-helper link .
#    script:
#        - odoo-helper doc-utils addons-list --installable --sys-name --field name --field license --field version --field summary --field price --format csv . > ./ADDONS.csv
#        - odoo-helper doc-utils addons-list --installable --sys-name --field name --field license --field version --field summary --field price --format md . > ./ADDONS.md
##        - odoo-helper tr regenerate --lang-file "uk_UA:uk" --lang-file "ru_RU:ru" --lang-file "de_DE:de" --lang-file "fr_FR:fr" --lang-file "lt_LT:lt" --pot --pot-remove-dates --missing-only --pot-update --dir .
#        - odoo-helper tr regenerate --lang-file "uk_UA:uk" --pot --pot-remove-dates --missing-only --pot-update --dir .
##        - git add ./ADDONS.csv ./ADDONS.md "*.po" "*.pot"
#        - git add ./ADDONS.csv ./ADDONS.md "*.po"
#        - odoo-helper ci push-changes "[CI-AUTO-UPDATE]"
#    <<: *only_stable_branch
#    <<: *except_auto_commits
#    allow_failure: true

translation_rate_ua:
    image: registry.crnd.pro/crnd-opensource/docker/odoo-ci-x:14.0-ci
    stage: test
    <<: *pip_cache_definition
    before_script:
        - odoo-helper link .
    script:
#        - odoo-helper --use-unbuffer tr rate --lang uk_UA --min-total-rate 94 --min-addon-rate 80 $(odoo-helper addons list .)
        - odoo-helper --use-unbuffer tr rate --lang uk_UA $(odoo-helper addons list .)
    coverage: '/^TOTAL\s+\|\s+\d+\s+\|\s+\d+\s+|\s+(\d+\.\d+)/'


.deploy_review_definition: &deploy_review_definition
    stage: deploy
    variables:
        CI_REVIEW_INSTALL_APT_DEPS: "poppler-utils libmagic1"
    before_script:
        - ci-review-app init
        - ci-review-app dep git@github.com:crnd-inc/generic-addons.git "$SERIES_BRANCH"
    script:
        - ci-review-app start
    tags:
        - review-apps
        - deploy
        - kitworks

deploy_review_dev:
    <<: *deploy_review_definition
    environment:
        name: review/$SERIES_BRANCH/$CI_COMMIT_REF_NAME
        url: http://$CI_ENVIRONMENT_SLUG-$CI_PROJECT_ID.test.preview.kitworks.systems
        on_stop: stop_review_dev
    <<: *only_dev_branch
    when: manual

deploy_review_stable:
    <<: *deploy_review_definition
    environment:
        name: stable/$CI_COMMIT_REF_NAME
        url: http://$CI_ENVIRONMENT_SLUG-$CI_PROJECT_ID.test.preview.kitworks.systems
    <<: *only_stable_branch
    when: manual

stop_review_dev:
    stage: deploy
    environment:
        name: review/$SERIES_BRANCH/$CI_COMMIT_REF_NAME
        action: stop
    variables:
        GIT_STRATEGY: none
    script:
        - ci-review-app stop
    when: manual
    tags:
        - review-apps
        - deploy
        - kitworks
    <<: *only_dev_branch
